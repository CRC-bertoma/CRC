name: Deploy Infrastructure and Website to Azure

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  TF_VERSION: "1.5.1"
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  deploy-IAC:
    runs-on: ubuntu-latest
    defaults:
     run:
       shell: bash
       working-directory: ./IAC
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install jq
      run: sudo apt-get install jq

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}
        
    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate -no-color

    - name: Terraform Plan
      run: terraform plan -no-color
      continue-on-error: false

    - name: Terraform Apply
      id: terraform
      run: |
        echo "CONNECTION_STRING=$(terraform apply -auto-approve -no-color -json | jq -r .outputs.connection_string.value)" >> $GITHUB_ENV

    outputs:
      connection_string: ${{ env.CONNECTION_STRING }}

  build-and-deploy-frontend:
    needs: deploy-IAC
    runs-on: ubuntu-latest
    env:
      CI: false
    defaults:
      run:
        shell: bash
        working-directory: ./frontend
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js for React App
      uses: actions/setup-node@v3
      with:
        node-version: '20.1.0'

    - name: Run install
      uses: borales/actions-yarn@v4
      with:
        cmd: install 
        dir: 'frontend'
          
    - name: Build production bundle
      uses: borales/actions-yarn@v4
      with:
        cmd: build
        dir: 'frontend'
        
    - name: Upload to Azure Blob Storage
      uses: azure/CLI@v1.0.7
      env:
        AZURE_STORAGE_CONNECTION_STRING: ${{ needs.deploy-IAC.outputs.connection_string }}
      with:
        inlineScript: |
          echo "Connection string: $AZURE_STORAGE_CONNECTION_STRING"
          az storage blob upload-batch --account-name mbcrcstorage -s ./frontend/build -d '$web'
